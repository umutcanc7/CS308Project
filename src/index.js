require("dotenv").config();
const express = require("express");
const path = require("path");
const bcrypt = require("bcryptjs");
const connectDB = require("./config"); // MongoDB baÄŸlantÄ±sÄ±nÄ± dahil et

const app = express();

// MongoDB'yi baÄŸla
connectDB();

// Middleware
app.use(express.json()); // JSON verileri iÅŸlemek iÃ§in
app.use(express.urlencoded({ extended: true })); // Form verilerini almak iÃ§in
app.set("view engine", "ejs");
app.use(express.static("public")); // Static files

// API'leri dahil et
const authRoutes = require("./routes/auth");
app.use("/auth", authRoutes);

const productRoutes = require("./routes/products"); // âœ… Ã¼rÃ¼n router'Ä±nÄ± dahil et
app.use("/products", productRoutes); // âœ… /products altÄ±nda kullanÄ±lsÄ±n

const reviewRoutes = require("./routes/reviews"); // âœ… yorum router'Ä±nÄ± dahil et
app.use("/reviews", reviewRoutes); // âœ… /reviews altÄ±nda kullanÄ±lsÄ±n

const cartRoutes = require("./routes/cart"); // âœ… sepet router'Ä±nÄ± dahil et
app.use("/cart", cartRoutes); // âœ… /cart altÄ±nda kullanÄ±lsÄ±n

// Routes for frontend pages
app.get("/", (req, res) => {
    res.render("login"); // Default page
});

app.get("/login", (req, res) => {
    res.render("login"); // Renders login.ejs
});

app.get("/signup", (req, res) => {
    res.render("signup"); // Renders signup.ejs
});

// Start server
const port = process.env.PORT || 5000;
app.listen(port, () => {
    console.log(`ğŸš€ Server running on Port: ${port}`);
});
