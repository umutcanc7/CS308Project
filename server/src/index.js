// .env dosyasÄ±ndaki deÄŸiÅŸkenleri yÃ¼klemek iÃ§in dotenv'i dahil et
require('dotenv').config();

// Mongo URI'yi kontrol etmek iÃ§in konsola yazdÄ±r
console.log('Mongo URI:', process.env.MONGO_URI);  // Mongo URI'sini konsola yazdÄ±r

const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const connectDB = require('./config');  // MongoDB baÄŸlantÄ±sÄ±nÄ± dahil et

const app = express();


// MongoDB'yi baÄŸla
connectDB();

// Middleware
app.use(cors());
app.use(express.json()); // JSON verileri iÅŸlemek iÃ§in
app.use(express.urlencoded({ extended: true })); // Form verilerini almak iÃ§in
app.set('view engine', 'ejs');
app.use(express.static('public')); // Static files

// API'leri dahil et
const authRoutes = require('./routes/auth');    
app.use('/auth', authRoutes);

const productRoutes = require('./routes/products'); // ÃœrÃ¼n router'Ä±nÄ± dahil et
app.use('/products', productRoutes); // /products altÄ±nda kullanÄ±lsÄ±n

const reviewRoutes = require('./routes/reviews'); // Yorum router'Ä±nÄ± dahil et
app.use('/reviews', reviewRoutes); // /reviews altÄ±nda kullanÄ±lsÄ±n

const cartRoutes = require('./routes/cart'); // Sepet router'Ä±nÄ± dahil et
app.use('/cart', cartRoutes); // /cart altÄ±nda kullanÄ±lsÄ±n

const purchaseRoutes = require('./routes/purchase'); // SatÄ±n alma router'Ä±nÄ± dahil et
app.use('/purchase', purchaseRoutes);



// Routes for frontend pages
app.get('/', (req, res) => {
    res.render('login'); // Default page
});

app.get('/login', (req, res) => {
    res.render('login'); // Renders login.ejs
});

app.get('/signup', (req, res) => {
    res.render('signup'); // Renders signup.ejs
});

const wishlistRoutes = require("./routes/wishlist");
app.use("/wishlist", wishlistRoutes);

// Start server
const port = process.env.PORT || 5001;
app.listen(port, () => {
    console.log(`ğŸš€ Server running on Port: ${port}`);
});